1.Vite 的 proxy 配置：
	对于前端开发人员来说，在开发阶段使用 vite.config.js 中的 proxy 配置，可以方便地将前端请求转发到后端服务器，解决跨域问题，无需复杂的配置，易于使用和理解，专注于开发过程中的前后端通信。
2.Nginx 的代理功能：
	是一种成熟的、适用于生产环境的服务器解决方案，可用于部署静态文件、反向代理、负载均衡等，提供更全面的功能和更高的性能，但需要更多的配置和管理，是一个独立的服务器软件。
3.在 Nginx 上部署 Vite 项目后，Vite 的反向代理功能将不再起作用。Vite 的代理配置仅在开发环境中有效。在生产环境中，Nginx 将直接提供打包后的静态文件，并且需要在 Nginx 的配置文件中手动设置代理，确保 API 请求能正确转发到后端服务。因此，我们需要在 Nginx 中配置反向代理，而不是依赖 Vite 的代理。